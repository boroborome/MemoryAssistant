
plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
ext {
	artifactId = "memory-assistant"

	junitVersion = '5.8.2'
	lombokVersion = '1.18.22'
}
repositories {
	mavenLocal()
	mavenCentral()
}

//bootRun {
//	systemProperties System.properties
//	jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
//}

//test {
//	systemProperties System.properties
////    jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5008"
//}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('org.springframework:spring-ibatis:2.0.8')
//	compile 'org.apache.ibatis:ibatis-core:3.0'
	implementation 'com.ibatis:ibatis2-common:2.1.7.597'
	implementation('org.flywaydb:flyway-core')
//	implementation('joda-time:joda-time:2.9.7')
	implementation 'org.dom4j:dom4j:2.1.4'

	annotationProcessor('org.projectlombok:lombok:1.16.14')
	compileOnly('org.projectlombok:lombok:1.16.14')

	runtimeOnly('com.h2database:h2')
	runtimeOnly('org.apache.derby:derby')
	runtimeOnly('mysql:mysql-connector-java')

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
	testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
	testImplementation 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
	testImplementation('org.dbunit:dbunit:2.5.3')

	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testCompileOnly('com.h2database:h2')

}
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

test {
	useJUnitPlatform()
	testLogging {
		events "skipped", "failed"
	}
}